/**
 * @Author: YanLeJun
 * @Description: 我相信一切都是最好的安排
 * @File:  进程与线程
 * @Date: 2020/12/3 18:20
 */
package main

/*
	进程并发: 稳定性强
		程序：编译成功得到的二进制文件  占用磁盘空间         一个程序可以对应多个进程
		进程：运行起来的程序           占用系统资源(内存)
	进程状态(5):
		初始态- 就绪态(等待CPU分配时间片)- 运行态(占用cpu)- O) - 终止态
		挂起态(遇到I/O)- 就绪态挂起态(遇到I/

	当一个进程启动时,系统会自动打开三个文件,标准输入,标准输出,标准错误 -- 对应的三个文件 stdin(键盘),stdout(屏幕),stderr(错误)
*/

/*
	线程并发: 节省资源
		线程: LWP,轻量级进程, CPU最小的执行单位,是CPU分配时间片对象,是在一个进程内开启,共享进程所有资源
		进程: 最小的系统资源分配单位
	线程同步: 当多个线程同时访问共享资源时,如果没有一种协调机制.那么就很容易产生与时间有关的数据错误
	线程同步机制:
		互斥锁
		读写锁: 一把锁(写属性,读属性),写独占,读共享,写的优先级高
*/

/*
	协程并发: 
		协程: coroutine, 轻量级线程
		出现协程就是解决了线程当出现阻塞时,让CPU可以干点其他的活,等到数据准备好了在去执行之前没有做完的事情
		协程就是提高了程序的执行效率
*/


